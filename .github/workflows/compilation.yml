name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build-docker:
    runs-on: ubuntu-latest
    container: ${{ matrix.os[0] }}:latest
    strategy:
      matrix:
        os: [[alpine, bash], [fedora, bash]]
    steps:
    - name: Install dependencies Alpine
      if: matrix.os[0] == 'alpine'
      run: |
        apk add --no-cache build-base bash git autoconf automake python3 py3-pip cmake pkgconfig libarchive-dev openssl-dev gpgme-dev libtool
    
    - name: Install dependencies Fedora
      if: matrix.os[0] == 'fedora'
      run: |
        dnf -y install @development-tools g++ wget xz git autoconf automake python3 python3-pip cmake pkgconf libarchive-devel openssl-devel gpgme-devel libtool

    - uses: actions/checkout@v4

    - name: Compile Tools
      run: |
        chown -R $(id -nu):$(id -ng) .
        export PSPDEV=$PWD/pspdev
        export PATH=$PATH:$PSPDEV/bin
        ./build-all.sh

  build-VM:
    runs-on: ${{ matrix.os[0] }}
    strategy:
      matrix:
        os: [
          [macos-latest, arm64, bash],
          [macos-13, x86_64, bash],
          [ubuntu-latest, x86_64, bash]
        ]
      fail-fast: false
    defaults:
     run:
      shell: ${{ matrix.os[2] }} {0}

    steps:
    - uses: actions/checkout@v4

    - name: Install on Ubuntu
      if: matrix.os[0] == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install libcurl4 libcurl4-openssl-dev libssl-dev libarchive-dev libgpgme-dev

    - name: Install Dependencies Mac
      if: startsWith( matrix.os[0], 'macos' )
      run: |
        brew update
        brew install automake bash libarchive gpgme libtool

    - name: Compile Tools
      run: |
        export PATH="$(brew --prefix libtool)/libexec/gnubin:$PATH"
        export PKG_CONFIG_PATH="$(brew --prefix libarchive)/lib/pkgconfig:$(brew --prefix openssl@3)/lib/pkgconfig"
        export PSPDEV=$PWD/pspdev
        export PATH=$PATH:$PSPDEV/bin
        ./build-all.sh
